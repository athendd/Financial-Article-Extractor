# https://medium.com/@zhonghong9998/how-neural-networks-can-enhance-stock-market-predictions-10fe42033a80, https://medium.com/@sohelrana.aiubPro/mastering-stock-price-prediction-using-deep-learning-models-a-comprehensive-guide-8884df010030
# try to get 3-5 years of historical data on the stocks
# use 20-50 stocks or more
import numpy as np
import pandas as pd
from keras.models import Sequential
from keras.layers import Dense, LSTM
from sklearn.preprocessing import MinMaxScaler

df = "chosen dataset"

scaler = MinMaxScaler(feature_range = (0,1))


model = Sequential()
model.add(LSTM(units = 50, return_sequences = True, input_shape = )

model.compile(optimizer='adam', loss='mean_squared_error')
model.fit(X_train, y_train, epochs=20, batch_size=64)

# Making predictions
predicted_stock_price = model.predict(X_train)

